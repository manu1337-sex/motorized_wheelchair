# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import prot.game.adventure_pb2 as game_dot_adventure__pb2

GRPC_GENERATED_VERSION = '1.66.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in game/adventure_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class AdventureServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UpdateAdventureInfo = channel.unary_unary(
                '/ck.game.AdventureService/UpdateAdventureInfo',
                request_serializer=game_dot_adventure__pb2.UpdateAdventureInfoRequest.SerializeToString,
                response_deserializer=game_dot_adventure__pb2.UpdateAdventureInfoResponse.FromString,
                _registered_method=True)
        self.StartLand = channel.unary_unary(
                '/ck.game.AdventureService/StartLand',
                request_serializer=game_dot_adventure__pb2.StartLandRequest.SerializeToString,
                response_deserializer=game_dot_adventure__pb2.StartLandResponse.FromString,
                _registered_method=True)
        self.GetOngoingLandBattle = channel.unary_unary(
                '/ck.game.AdventureService/GetOngoingLandBattle',
                request_serializer=game_dot_adventure__pb2.GetOngoingLandBattleRequest.SerializeToString,
                response_deserializer=game_dot_adventure__pb2.GetOngoingLandBattleResponse.FromString,
                _registered_method=True)
        self.CompleteLand = channel.unary_unary(
                '/ck.game.AdventureService/CompleteLand',
                request_serializer=game_dot_adventure__pb2.CompleteLandRequest.SerializeToString,
                response_deserializer=game_dot_adventure__pb2.CompleteLandResponse.FromString,
                _registered_method=True)
        self.FailToCompleteLand = channel.unary_unary(
                '/ck.game.AdventureService/FailToCompleteLand',
                request_serializer=game_dot_adventure__pb2.FailToCompleteLandRequest.SerializeToString,
                response_deserializer=game_dot_adventure__pb2.FailToCompleteLandResponse.FromString,
                _registered_method=True)
        self.FastForwardLand = channel.unary_unary(
                '/ck.game.AdventureService/FastForwardLand',
                request_serializer=game_dot_adventure__pb2.FastForwardLandRequest.SerializeToString,
                response_deserializer=game_dot_adventure__pb2.FastForwardLandResponse.FromString,
                _registered_method=True)
        self.ChargeLandPlayCount = channel.unary_unary(
                '/ck.game.AdventureService/ChargeLandPlayCount',
                request_serializer=game_dot_adventure__pb2.ChargeLandPlayCountRequest.SerializeToString,
                response_deserializer=game_dot_adventure__pb2.ChargeLandPlayCountResponse.FromString,
                _registered_method=True)
        self.UpdateDailyDungeonState = channel.unary_unary(
                '/ck.game.AdventureService/UpdateDailyDungeonState',
                request_serializer=game_dot_adventure__pb2.UpdateDailyDungeonStateRequest.SerializeToString,
                response_deserializer=game_dot_adventure__pb2.UpdateDailyDungeonStateResponse.FromString,
                _registered_method=True)
        self.StartDailyDungeon = channel.unary_unary(
                '/ck.game.AdventureService/StartDailyDungeon',
                request_serializer=game_dot_adventure__pb2.StartDailyDungeonRequest.SerializeToString,
                response_deserializer=game_dot_adventure__pb2.StartDailyDungeonResponse.FromString,
                _registered_method=True)
        self.GetOngoingDailyDungeon = channel.unary_unary(
                '/ck.game.AdventureService/GetOngoingDailyDungeon',
                request_serializer=game_dot_adventure__pb2.GetOngoingDailyDungeonRequest.SerializeToString,
                response_deserializer=game_dot_adventure__pb2.GetOngoingDailyDungeonResponse.FromString,
                _registered_method=True)
        self.CompleteDailyDungeon = channel.unary_unary(
                '/ck.game.AdventureService/CompleteDailyDungeon',
                request_serializer=game_dot_adventure__pb2.CompleteDailyDungeonRequest.SerializeToString,
                response_deserializer=game_dot_adventure__pb2.CompleteDailyDungeonResponse.FromString,
                _registered_method=True)
        self.FailToCompleteDailyDungeon = channel.unary_unary(
                '/ck.game.AdventureService/FailToCompleteDailyDungeon',
                request_serializer=game_dot_adventure__pb2.FailToCompleteDailyDungeonRequest.SerializeToString,
                response_deserializer=game_dot_adventure__pb2.FailToCompleteDailyDungeonResponse.FromString,
                _registered_method=True)
        self.FastForwardDailyDungeon = channel.unary_unary(
                '/ck.game.AdventureService/FastForwardDailyDungeon',
                request_serializer=game_dot_adventure__pb2.FastForwardDailyDungeonRequest.SerializeToString,
                response_deserializer=game_dot_adventure__pb2.FastForwardDailyDungeonResponse.FromString,
                _registered_method=True)
        self.ChargeDailyDungeonPlayCount = channel.unary_unary(
                '/ck.game.AdventureService/ChargeDailyDungeonPlayCount',
                request_serializer=game_dot_adventure__pb2.ChargeDailyDungeonPlayCountRequest.SerializeToString,
                response_deserializer=game_dot_adventure__pb2.ChargeDailyDungeonPlayCountResponse.FromString,
                _registered_method=True)
        self.SelectDailyDungeonBounty = channel.unary_unary(
                '/ck.game.AdventureService/SelectDailyDungeonBounty',
                request_serializer=game_dot_adventure__pb2.SelectDailyDungeonBountyRequest.SerializeToString,
                response_deserializer=game_dot_adventure__pb2.SelectDailyDungeonBountyResponse.FromString,
                _registered_method=True)
        self.ChargeDailyDungeonPlayCountByTicket = channel.unary_unary(
                '/ck.game.AdventureService/ChargeDailyDungeonPlayCountByTicket',
                request_serializer=game_dot_adventure__pb2.ChargeDailyDungeonPlayCountByTicketRequest.SerializeToString,
                response_deserializer=game_dot_adventure__pb2.ChargeDailyDungeonPlayCountByTicketResponse.FromString,
                _registered_method=True)


class AdventureServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UpdateAdventureInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartLand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOngoingLandBattle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompleteLand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FailToCompleteLand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FastForwardLand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChargeLandPlayCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDailyDungeonState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartDailyDungeon(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOngoingDailyDungeon(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompleteDailyDungeon(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FailToCompleteDailyDungeon(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FastForwardDailyDungeon(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChargeDailyDungeonPlayCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SelectDailyDungeonBounty(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChargeDailyDungeonPlayCountByTicket(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AdventureServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UpdateAdventureInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAdventureInfo,
                    request_deserializer=game_dot_adventure__pb2.UpdateAdventureInfoRequest.FromString,
                    response_serializer=game_dot_adventure__pb2.UpdateAdventureInfoResponse.SerializeToString,
            ),
            'StartLand': grpc.unary_unary_rpc_method_handler(
                    servicer.StartLand,
                    request_deserializer=game_dot_adventure__pb2.StartLandRequest.FromString,
                    response_serializer=game_dot_adventure__pb2.StartLandResponse.SerializeToString,
            ),
            'GetOngoingLandBattle': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOngoingLandBattle,
                    request_deserializer=game_dot_adventure__pb2.GetOngoingLandBattleRequest.FromString,
                    response_serializer=game_dot_adventure__pb2.GetOngoingLandBattleResponse.SerializeToString,
            ),
            'CompleteLand': grpc.unary_unary_rpc_method_handler(
                    servicer.CompleteLand,
                    request_deserializer=game_dot_adventure__pb2.CompleteLandRequest.FromString,
                    response_serializer=game_dot_adventure__pb2.CompleteLandResponse.SerializeToString,
            ),
            'FailToCompleteLand': grpc.unary_unary_rpc_method_handler(
                    servicer.FailToCompleteLand,
                    request_deserializer=game_dot_adventure__pb2.FailToCompleteLandRequest.FromString,
                    response_serializer=game_dot_adventure__pb2.FailToCompleteLandResponse.SerializeToString,
            ),
            'FastForwardLand': grpc.unary_unary_rpc_method_handler(
                    servicer.FastForwardLand,
                    request_deserializer=game_dot_adventure__pb2.FastForwardLandRequest.FromString,
                    response_serializer=game_dot_adventure__pb2.FastForwardLandResponse.SerializeToString,
            ),
            'ChargeLandPlayCount': grpc.unary_unary_rpc_method_handler(
                    servicer.ChargeLandPlayCount,
                    request_deserializer=game_dot_adventure__pb2.ChargeLandPlayCountRequest.FromString,
                    response_serializer=game_dot_adventure__pb2.ChargeLandPlayCountResponse.SerializeToString,
            ),
            'UpdateDailyDungeonState': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDailyDungeonState,
                    request_deserializer=game_dot_adventure__pb2.UpdateDailyDungeonStateRequest.FromString,
                    response_serializer=game_dot_adventure__pb2.UpdateDailyDungeonStateResponse.SerializeToString,
            ),
            'StartDailyDungeon': grpc.unary_unary_rpc_method_handler(
                    servicer.StartDailyDungeon,
                    request_deserializer=game_dot_adventure__pb2.StartDailyDungeonRequest.FromString,
                    response_serializer=game_dot_adventure__pb2.StartDailyDungeonResponse.SerializeToString,
            ),
            'GetOngoingDailyDungeon': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOngoingDailyDungeon,
                    request_deserializer=game_dot_adventure__pb2.GetOngoingDailyDungeonRequest.FromString,
                    response_serializer=game_dot_adventure__pb2.GetOngoingDailyDungeonResponse.SerializeToString,
            ),
            'CompleteDailyDungeon': grpc.unary_unary_rpc_method_handler(
                    servicer.CompleteDailyDungeon,
                    request_deserializer=game_dot_adventure__pb2.CompleteDailyDungeonRequest.FromString,
                    response_serializer=game_dot_adventure__pb2.CompleteDailyDungeonResponse.SerializeToString,
            ),
            'FailToCompleteDailyDungeon': grpc.unary_unary_rpc_method_handler(
                    servicer.FailToCompleteDailyDungeon,
                    request_deserializer=game_dot_adventure__pb2.FailToCompleteDailyDungeonRequest.FromString,
                    response_serializer=game_dot_adventure__pb2.FailToCompleteDailyDungeonResponse.SerializeToString,
            ),
            'FastForwardDailyDungeon': grpc.unary_unary_rpc_method_handler(
                    servicer.FastForwardDailyDungeon,
                    request_deserializer=game_dot_adventure__pb2.FastForwardDailyDungeonRequest.FromString,
                    response_serializer=game_dot_adventure__pb2.FastForwardDailyDungeonResponse.SerializeToString,
            ),
            'ChargeDailyDungeonPlayCount': grpc.unary_unary_rpc_method_handler(
                    servicer.ChargeDailyDungeonPlayCount,
                    request_deserializer=game_dot_adventure__pb2.ChargeDailyDungeonPlayCountRequest.FromString,
                    response_serializer=game_dot_adventure__pb2.ChargeDailyDungeonPlayCountResponse.SerializeToString,
            ),
            'SelectDailyDungeonBounty': grpc.unary_unary_rpc_method_handler(
                    servicer.SelectDailyDungeonBounty,
                    request_deserializer=game_dot_adventure__pb2.SelectDailyDungeonBountyRequest.FromString,
                    response_serializer=game_dot_adventure__pb2.SelectDailyDungeonBountyResponse.SerializeToString,
            ),
            'ChargeDailyDungeonPlayCountByTicket': grpc.unary_unary_rpc_method_handler(
                    servicer.ChargeDailyDungeonPlayCountByTicket,
                    request_deserializer=game_dot_adventure__pb2.ChargeDailyDungeonPlayCountByTicketRequest.FromString,
                    response_serializer=game_dot_adventure__pb2.ChargeDailyDungeonPlayCountByTicketResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ck.game.AdventureService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('ck.game.AdventureService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AdventureService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UpdateAdventureInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.AdventureService/UpdateAdventureInfo',
            game_dot_adventure__pb2.UpdateAdventureInfoRequest.SerializeToString,
            game_dot_adventure__pb2.UpdateAdventureInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartLand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.AdventureService/StartLand',
            game_dot_adventure__pb2.StartLandRequest.SerializeToString,
            game_dot_adventure__pb2.StartLandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOngoingLandBattle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.AdventureService/GetOngoingLandBattle',
            game_dot_adventure__pb2.GetOngoingLandBattleRequest.SerializeToString,
            game_dot_adventure__pb2.GetOngoingLandBattleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CompleteLand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.AdventureService/CompleteLand',
            game_dot_adventure__pb2.CompleteLandRequest.SerializeToString,
            game_dot_adventure__pb2.CompleteLandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FailToCompleteLand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.AdventureService/FailToCompleteLand',
            game_dot_adventure__pb2.FailToCompleteLandRequest.SerializeToString,
            game_dot_adventure__pb2.FailToCompleteLandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FastForwardLand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.AdventureService/FastForwardLand',
            game_dot_adventure__pb2.FastForwardLandRequest.SerializeToString,
            game_dot_adventure__pb2.FastForwardLandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ChargeLandPlayCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.AdventureService/ChargeLandPlayCount',
            game_dot_adventure__pb2.ChargeLandPlayCountRequest.SerializeToString,
            game_dot_adventure__pb2.ChargeLandPlayCountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateDailyDungeonState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.AdventureService/UpdateDailyDungeonState',
            game_dot_adventure__pb2.UpdateDailyDungeonStateRequest.SerializeToString,
            game_dot_adventure__pb2.UpdateDailyDungeonStateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartDailyDungeon(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.AdventureService/StartDailyDungeon',
            game_dot_adventure__pb2.StartDailyDungeonRequest.SerializeToString,
            game_dot_adventure__pb2.StartDailyDungeonResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOngoingDailyDungeon(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.AdventureService/GetOngoingDailyDungeon',
            game_dot_adventure__pb2.GetOngoingDailyDungeonRequest.SerializeToString,
            game_dot_adventure__pb2.GetOngoingDailyDungeonResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CompleteDailyDungeon(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.AdventureService/CompleteDailyDungeon',
            game_dot_adventure__pb2.CompleteDailyDungeonRequest.SerializeToString,
            game_dot_adventure__pb2.CompleteDailyDungeonResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FailToCompleteDailyDungeon(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.AdventureService/FailToCompleteDailyDungeon',
            game_dot_adventure__pb2.FailToCompleteDailyDungeonRequest.SerializeToString,
            game_dot_adventure__pb2.FailToCompleteDailyDungeonResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FastForwardDailyDungeon(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.AdventureService/FastForwardDailyDungeon',
            game_dot_adventure__pb2.FastForwardDailyDungeonRequest.SerializeToString,
            game_dot_adventure__pb2.FastForwardDailyDungeonResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ChargeDailyDungeonPlayCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.AdventureService/ChargeDailyDungeonPlayCount',
            game_dot_adventure__pb2.ChargeDailyDungeonPlayCountRequest.SerializeToString,
            game_dot_adventure__pb2.ChargeDailyDungeonPlayCountResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SelectDailyDungeonBounty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.AdventureService/SelectDailyDungeonBounty',
            game_dot_adventure__pb2.SelectDailyDungeonBountyRequest.SerializeToString,
            game_dot_adventure__pb2.SelectDailyDungeonBountyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ChargeDailyDungeonPlayCountByTicket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.AdventureService/ChargeDailyDungeonPlayCountByTicket',
            game_dot_adventure__pb2.ChargeDailyDungeonPlayCountByTicketRequest.SerializeToString,
            game_dot_adventure__pb2.ChargeDailyDungeonPlayCountByTicketResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

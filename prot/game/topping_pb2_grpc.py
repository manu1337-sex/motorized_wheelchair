# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import prot.game.topping_pb2 as game_dot_topping__pb2

GRPC_GENERATED_VERSION = '1.66.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in game/topping_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ToppingServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TransferTopping = channel.unary_unary(
                '/ck.game.ToppingService/TransferTopping',
                request_serializer=game_dot_topping__pb2.TransferToppingRequest.SerializeToString,
                response_deserializer=game_dot_topping__pb2.TransferToppingResponse.FromString,
                _registered_method=True)
        self.EquipTopping = channel.unary_unary(
                '/ck.game.ToppingService/EquipTopping',
                request_serializer=game_dot_topping__pb2.EquipToppingRequest.SerializeToString,
                response_deserializer=game_dot_topping__pb2.EquipToppingResponse.FromString,
                _registered_method=True)
        self.UnequipTopping = channel.unary_unary(
                '/ck.game.ToppingService/UnequipTopping',
                request_serializer=game_dot_topping__pb2.UnequipToppingRequest.SerializeToString,
                response_deserializer=game_dot_topping__pb2.UnequipToppingResponse.FromString,
                _registered_method=True)
        self.UpgradeTopping = channel.unary_unary(
                '/ck.game.ToppingService/UpgradeTopping',
                request_serializer=game_dot_topping__pb2.UpgradeToppingRequest.SerializeToString,
                response_deserializer=game_dot_topping__pb2.UpgradeToppingResponse.FromString,
                _registered_method=True)
        self.DisassembleToppings = channel.unary_unary(
                '/ck.game.ToppingService/DisassembleToppings',
                request_serializer=game_dot_topping__pb2.DisassembleToppingsRequest.SerializeToString,
                response_deserializer=game_dot_topping__pb2.DisassembleToppingsResponse.FromString,
                _registered_method=True)
        self.MarkTopping = channel.unary_unary(
                '/ck.game.ToppingService/MarkTopping',
                request_serializer=game_dot_topping__pb2.MarkToppingRequest.SerializeToString,
                response_deserializer=game_dot_topping__pb2.MarkToppingResponse.FromString,
                _registered_method=True)
        self.UnmarkTopping = channel.unary_unary(
                '/ck.game.ToppingService/UnmarkTopping',
                request_serializer=game_dot_topping__pb2.UnmarkToppingRequest.SerializeToString,
                response_deserializer=game_dot_topping__pb2.UnmarkToppingResponse.FromString,
                _registered_method=True)
        self.SaveToppingCombination = channel.unary_unary(
                '/ck.game.ToppingService/SaveToppingCombination',
                request_serializer=game_dot_topping__pb2.SaveToppingCombinationRequest.SerializeToString,
                response_deserializer=game_dot_topping__pb2.SaveToppingCombinationResponse.FromString,
                _registered_method=True)
        self.LoadToppingCombination = channel.unary_unary(
                '/ck.game.ToppingService/LoadToppingCombination',
                request_serializer=game_dot_topping__pb2.LoadToppingCombinationRequest.SerializeToString,
                response_deserializer=game_dot_topping__pb2.LoadToppingCombinationResponse.FromString,
                _registered_method=True)
        self.ChangeToppingCombinationSlotName = channel.unary_unary(
                '/ck.game.ToppingService/ChangeToppingCombinationSlotName',
                request_serializer=game_dot_topping__pb2.ChangeToppingCombinationSlotNameRequest.SerializeToString,
                response_deserializer=game_dot_topping__pb2.ChangeToppingCombinationSlotNameResponse.FromString,
                _registered_method=True)
        self.UnlockToppingCombinationSlot = channel.unary_unary(
                '/ck.game.ToppingService/UnlockToppingCombinationSlot',
                request_serializer=game_dot_topping__pb2.UnlockToppingCombinationSlotRequest.SerializeToString,
                response_deserializer=game_dot_topping__pb2.UnlockToppingCombinationSlotResponse.FromString,
                _registered_method=True)
        self.UpgradeToppingsAtOnce = channel.unary_unary(
                '/ck.game.ToppingService/UpgradeToppingsAtOnce',
                request_serializer=game_dot_topping__pb2.UpgradeToppingsAtOnceRequest.SerializeToString,
                response_deserializer=game_dot_topping__pb2.UpgradeToppingsAtOnceResponse.FromString,
                _registered_method=True)
        self.ResetToppingCombinationSlot = channel.unary_unary(
                '/ck.game.ToppingService/ResetToppingCombinationSlot',
                request_serializer=game_dot_topping__pb2.ResetToppingCombinationSlotRequest.SerializeToString,
                response_deserializer=game_dot_topping__pb2.ResetToppingCombinationSlotResponse.FromString,
                _registered_method=True)
        self.ResetEquippedToppings = channel.unary_unary(
                '/ck.game.ToppingService/ResetEquippedToppings',
                request_serializer=game_dot_topping__pb2.ResetEquippedToppingsRequest.SerializeToString,
                response_deserializer=game_dot_topping__pb2.ResetEquippedToppingsResponse.FromString,
                _registered_method=True)


class ToppingServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TransferTopping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EquipTopping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnequipTopping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpgradeTopping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisassembleToppings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkTopping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnmarkTopping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SaveToppingCombination(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadToppingCombination(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeToppingCombinationSlotName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnlockToppingCombinationSlot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpgradeToppingsAtOnce(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetToppingCombinationSlot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetEquippedToppings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ToppingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TransferTopping': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferTopping,
                    request_deserializer=game_dot_topping__pb2.TransferToppingRequest.FromString,
                    response_serializer=game_dot_topping__pb2.TransferToppingResponse.SerializeToString,
            ),
            'EquipTopping': grpc.unary_unary_rpc_method_handler(
                    servicer.EquipTopping,
                    request_deserializer=game_dot_topping__pb2.EquipToppingRequest.FromString,
                    response_serializer=game_dot_topping__pb2.EquipToppingResponse.SerializeToString,
            ),
            'UnequipTopping': grpc.unary_unary_rpc_method_handler(
                    servicer.UnequipTopping,
                    request_deserializer=game_dot_topping__pb2.UnequipToppingRequest.FromString,
                    response_serializer=game_dot_topping__pb2.UnequipToppingResponse.SerializeToString,
            ),
            'UpgradeTopping': grpc.unary_unary_rpc_method_handler(
                    servicer.UpgradeTopping,
                    request_deserializer=game_dot_topping__pb2.UpgradeToppingRequest.FromString,
                    response_serializer=game_dot_topping__pb2.UpgradeToppingResponse.SerializeToString,
            ),
            'DisassembleToppings': grpc.unary_unary_rpc_method_handler(
                    servicer.DisassembleToppings,
                    request_deserializer=game_dot_topping__pb2.DisassembleToppingsRequest.FromString,
                    response_serializer=game_dot_topping__pb2.DisassembleToppingsResponse.SerializeToString,
            ),
            'MarkTopping': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkTopping,
                    request_deserializer=game_dot_topping__pb2.MarkToppingRequest.FromString,
                    response_serializer=game_dot_topping__pb2.MarkToppingResponse.SerializeToString,
            ),
            'UnmarkTopping': grpc.unary_unary_rpc_method_handler(
                    servicer.UnmarkTopping,
                    request_deserializer=game_dot_topping__pb2.UnmarkToppingRequest.FromString,
                    response_serializer=game_dot_topping__pb2.UnmarkToppingResponse.SerializeToString,
            ),
            'SaveToppingCombination': grpc.unary_unary_rpc_method_handler(
                    servicer.SaveToppingCombination,
                    request_deserializer=game_dot_topping__pb2.SaveToppingCombinationRequest.FromString,
                    response_serializer=game_dot_topping__pb2.SaveToppingCombinationResponse.SerializeToString,
            ),
            'LoadToppingCombination': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadToppingCombination,
                    request_deserializer=game_dot_topping__pb2.LoadToppingCombinationRequest.FromString,
                    response_serializer=game_dot_topping__pb2.LoadToppingCombinationResponse.SerializeToString,
            ),
            'ChangeToppingCombinationSlotName': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeToppingCombinationSlotName,
                    request_deserializer=game_dot_topping__pb2.ChangeToppingCombinationSlotNameRequest.FromString,
                    response_serializer=game_dot_topping__pb2.ChangeToppingCombinationSlotNameResponse.SerializeToString,
            ),
            'UnlockToppingCombinationSlot': grpc.unary_unary_rpc_method_handler(
                    servicer.UnlockToppingCombinationSlot,
                    request_deserializer=game_dot_topping__pb2.UnlockToppingCombinationSlotRequest.FromString,
                    response_serializer=game_dot_topping__pb2.UnlockToppingCombinationSlotResponse.SerializeToString,
            ),
            'UpgradeToppingsAtOnce': grpc.unary_unary_rpc_method_handler(
                    servicer.UpgradeToppingsAtOnce,
                    request_deserializer=game_dot_topping__pb2.UpgradeToppingsAtOnceRequest.FromString,
                    response_serializer=game_dot_topping__pb2.UpgradeToppingsAtOnceResponse.SerializeToString,
            ),
            'ResetToppingCombinationSlot': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetToppingCombinationSlot,
                    request_deserializer=game_dot_topping__pb2.ResetToppingCombinationSlotRequest.FromString,
                    response_serializer=game_dot_topping__pb2.ResetToppingCombinationSlotResponse.SerializeToString,
            ),
            'ResetEquippedToppings': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetEquippedToppings,
                    request_deserializer=game_dot_topping__pb2.ResetEquippedToppingsRequest.FromString,
                    response_serializer=game_dot_topping__pb2.ResetEquippedToppingsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ck.game.ToppingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('ck.game.ToppingService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ToppingService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TransferTopping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.ToppingService/TransferTopping',
            game_dot_topping__pb2.TransferToppingRequest.SerializeToString,
            game_dot_topping__pb2.TransferToppingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EquipTopping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.ToppingService/EquipTopping',
            game_dot_topping__pb2.EquipToppingRequest.SerializeToString,
            game_dot_topping__pb2.EquipToppingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnequipTopping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.ToppingService/UnequipTopping',
            game_dot_topping__pb2.UnequipToppingRequest.SerializeToString,
            game_dot_topping__pb2.UnequipToppingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpgradeTopping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.ToppingService/UpgradeTopping',
            game_dot_topping__pb2.UpgradeToppingRequest.SerializeToString,
            game_dot_topping__pb2.UpgradeToppingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DisassembleToppings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.ToppingService/DisassembleToppings',
            game_dot_topping__pb2.DisassembleToppingsRequest.SerializeToString,
            game_dot_topping__pb2.DisassembleToppingsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MarkTopping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.ToppingService/MarkTopping',
            game_dot_topping__pb2.MarkToppingRequest.SerializeToString,
            game_dot_topping__pb2.MarkToppingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnmarkTopping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.ToppingService/UnmarkTopping',
            game_dot_topping__pb2.UnmarkToppingRequest.SerializeToString,
            game_dot_topping__pb2.UnmarkToppingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SaveToppingCombination(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.ToppingService/SaveToppingCombination',
            game_dot_topping__pb2.SaveToppingCombinationRequest.SerializeToString,
            game_dot_topping__pb2.SaveToppingCombinationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LoadToppingCombination(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.ToppingService/LoadToppingCombination',
            game_dot_topping__pb2.LoadToppingCombinationRequest.SerializeToString,
            game_dot_topping__pb2.LoadToppingCombinationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ChangeToppingCombinationSlotName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.ToppingService/ChangeToppingCombinationSlotName',
            game_dot_topping__pb2.ChangeToppingCombinationSlotNameRequest.SerializeToString,
            game_dot_topping__pb2.ChangeToppingCombinationSlotNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnlockToppingCombinationSlot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.ToppingService/UnlockToppingCombinationSlot',
            game_dot_topping__pb2.UnlockToppingCombinationSlotRequest.SerializeToString,
            game_dot_topping__pb2.UnlockToppingCombinationSlotResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpgradeToppingsAtOnce(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.ToppingService/UpgradeToppingsAtOnce',
            game_dot_topping__pb2.UpgradeToppingsAtOnceRequest.SerializeToString,
            game_dot_topping__pb2.UpgradeToppingsAtOnceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResetToppingCombinationSlot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.ToppingService/ResetToppingCombinationSlot',
            game_dot_topping__pb2.ResetToppingCombinationSlotRequest.SerializeToString,
            game_dot_topping__pb2.ResetToppingCombinationSlotResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResetEquippedToppings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.ToppingService/ResetEquippedToppings',
            game_dot_topping__pb2.ResetEquippedToppingsRequest.SerializeToString,
            game_dot_topping__pb2.ResetEquippedToppingsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

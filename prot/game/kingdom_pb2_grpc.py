# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import prot.game.kingdom_pb2 as game_dot_kingdom__pb2

GRPC_GENERATED_VERSION = '1.66.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in game/kingdom_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class KingdomServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SignUp = channel.unary_unary(
                '/ck.game.KingdomService/SignUp',
                request_serializer=game_dot_kingdom__pb2.SignUpRequest.SerializeToString,
                response_deserializer=game_dot_kingdom__pb2.SignUpResponse.FromString,
                _registered_method=True)
        self.CheckKingdomNameExists = channel.unary_unary(
                '/ck.game.KingdomService/CheckKingdomNameExists',
                request_serializer=game_dot_kingdom__pb2.CheckKingdomNameExistsRequest.SerializeToString,
                response_deserializer=game_dot_kingdom__pb2.CheckKingdomNameExistsResponse.FromString,
                _registered_method=True)
        self.ChangeKingdomName = channel.unary_unary(
                '/ck.game.KingdomService/ChangeKingdomName',
                request_serializer=game_dot_kingdom__pb2.ChangeKingdomNameRequest.SerializeToString,
                response_deserializer=game_dot_kingdom__pb2.ChangeKingdomNameResponse.FromString,
                _registered_method=True)
        self.SellStackableItem = channel.unary_unary(
                '/ck.game.KingdomService/SellStackableItem',
                request_serializer=game_dot_kingdom__pb2.SellStackableItemRequest.SerializeToString,
                response_deserializer=game_dot_kingdom__pb2.SellStackableItemResponse.FromString,
                _registered_method=True)
        self.ExpandStorage = channel.unary_unary(
                '/ck.game.KingdomService/ExpandStorage',
                request_serializer=game_dot_kingdom__pb2.ExpandStorageRequest.SerializeToString,
                response_deserializer=game_dot_kingdom__pb2.ExpandStorageResponse.FromString,
                _registered_method=True)
        self.LevelUpTreasure = channel.unary_unary(
                '/ck.game.KingdomService/LevelUpTreasure',
                request_serializer=game_dot_kingdom__pb2.LevelUpTreasureRequest.SerializeToString,
                response_deserializer=game_dot_kingdom__pb2.LevelUpTreasureResponse.FromString,
                _registered_method=True)
        self.CompleteAchievements = channel.unary_unary(
                '/ck.game.KingdomService/CompleteAchievements',
                request_serializer=game_dot_kingdom__pb2.CompleteAchievementsRequest.SerializeToString,
                response_deserializer=game_dot_kingdom__pb2.CompleteAchievementsResponse.FromString,
                _registered_method=True)
        self.SetBattleTeam = channel.unary_unary(
                '/ck.game.KingdomService/SetBattleTeam',
                request_serializer=game_dot_kingdom__pb2.SetBattleTeamRequest.SerializeToString,
                response_deserializer=game_dot_kingdom__pb2.SetBattleTeamResponse.FromString,
                _registered_method=True)
        self.SetBattleTeams = channel.unary_unary(
                '/ck.game.KingdomService/SetBattleTeams',
                request_serializer=game_dot_kingdom__pb2.SetBattleTeamsRequest.SerializeToString,
                response_deserializer=game_dot_kingdom__pb2.SetBattleTeamsResponse.FromString,
                _registered_method=True)
        self.ClearRecordGroup = channel.unary_unary(
                '/ck.game.KingdomService/ClearRecordGroup',
                request_serializer=game_dot_kingdom__pb2.ClearRecordGroupRequest.SerializeToString,
                response_deserializer=game_dot_kingdom__pb2.ClearRecordGroupResponse.FromString,
                _registered_method=True)
        self.ReceivePlatformConnectReward = channel.unary_unary(
                '/ck.game.KingdomService/ReceivePlatformConnectReward',
                request_serializer=game_dot_kingdom__pb2.ReceivePlatformConnectRewardRequest.SerializeToString,
                response_deserializer=game_dot_kingdom__pb2.ReceivePlatformConnectRewardResponse.FromString,
                _registered_method=True)
        self.GetPendingAdditionalEvents = channel.unary_unary(
                '/ck.game.KingdomService/GetPendingAdditionalEvents',
                request_serializer=game_dot_kingdom__pb2.GetPendingAdditionalEventsRequest.SerializeToString,
                response_deserializer=game_dot_kingdom__pb2.GetPendingAdditionalEventsResponse.FromString,
                _registered_method=True)
        self.GetKingdomProfile = channel.unary_unary(
                '/ck.game.KingdomService/GetKingdomProfile',
                request_serializer=game_dot_kingdom__pb2.GetKingdomProfileRequest.SerializeToString,
                response_deserializer=game_dot_kingdom__pb2.GetKingdomProfileResponse.FromString,
                _registered_method=True)
        self.SetClientLogicVersion = channel.unary_unary(
                '/ck.game.KingdomService/SetClientLogicVersion',
                request_serializer=game_dot_kingdom__pb2.SetClientLogicVersionRequest.SerializeToString,
                response_deserializer=game_dot_kingdom__pb2.SetClientLogicVersionResponse.FromString,
                _registered_method=True)
        self.ReceiveAdvertisementReward = channel.unary_unary(
                '/ck.game.KingdomService/ReceiveAdvertisementReward',
                request_serializer=game_dot_kingdom__pb2.ReceiveAdvertisementRewardRequest.SerializeToString,
                response_deserializer=game_dot_kingdom__pb2.ReceiveAdvertisementRewardResponse.FromString,
                _registered_method=True)
        self.StartAdvertisement = channel.unary_unary(
                '/ck.game.KingdomService/StartAdvertisement',
                request_serializer=game_dot_kingdom__pb2.StartAdvertisementRequest.SerializeToString,
                response_deserializer=game_dot_kingdom__pb2.StartAdvertisementResponse.FromString,
                _registered_method=True)
        self.ReceiveProsperityLevelReward = channel.unary_unary(
                '/ck.game.KingdomService/ReceiveProsperityLevelReward',
                request_serializer=game_dot_kingdom__pb2.ReceiveProsperityLevelRewardRequest.SerializeToString,
                response_deserializer=game_dot_kingdom__pb2.ReceiveProsperityLevelRewardResponse.FromString,
                _registered_method=True)
        self.GetProsperityRanking = channel.unary_unary(
                '/ck.game.KingdomService/GetProsperityRanking',
                request_serializer=game_dot_kingdom__pb2.GetProsperityRankingRequest.SerializeToString,
                response_deserializer=game_dot_kingdom__pb2.GetProsperityRankingResponse.FromString,
                _registered_method=True)
        self.ReceiveKingdomLevelReward = channel.unary_unary(
                '/ck.game.KingdomService/ReceiveKingdomLevelReward',
                request_serializer=game_dot_kingdom__pb2.ReceiveKingdomLevelRewardRequest.SerializeToString,
                response_deserializer=game_dot_kingdom__pb2.ReceiveKingdomLevelRewardResponse.FromString,
                _registered_method=True)
        self.ReceiveCookieRelationshipRewards = channel.unary_unary(
                '/ck.game.KingdomService/ReceiveCookieRelationshipRewards',
                request_serializer=game_dot_kingdom__pb2.ReceiveCookieRelationshipRewardsRequest.SerializeToString,
                response_deserializer=game_dot_kingdom__pb2.ReceiveCookieRelationshipRewardsResponse.FromString,
                _registered_method=True)
        self.ReceiveCookieSkinRelationshipRewards = channel.unary_unary(
                '/ck.game.KingdomService/ReceiveCookieSkinRelationshipRewards',
                request_serializer=game_dot_kingdom__pb2.ReceiveCookieSkinRelationshipRewardsRequest.SerializeToString,
                response_deserializer=game_dot_kingdom__pb2.ReceiveCookieSkinRelationshipRewardsResponse.FromString,
                _registered_method=True)
        self.ReceiveAllCookieRelationshipRewards = channel.unary_unary(
                '/ck.game.KingdomService/ReceiveAllCookieRelationshipRewards',
                request_serializer=game_dot_kingdom__pb2.ReceiveAllCookieRelationshipRewardsRequest.SerializeToString,
                response_deserializer=game_dot_kingdom__pb2.ReceiveAllCookieRelationshipRewardsResponse.FromString,
                _registered_method=True)
        self.ReceiveAllCookieSkinRelationshipRewards = channel.unary_unary(
                '/ck.game.KingdomService/ReceiveAllCookieSkinRelationshipRewards',
                request_serializer=game_dot_kingdom__pb2.ReceiveAllCookieSkinRelationshipRewardsRequest.SerializeToString,
                response_deserializer=game_dot_kingdom__pb2.ReceiveAllCookieSkinRelationshipRewardsResponse.FromString,
                _registered_method=True)
        self.GetUnconfirmedRewardsInAdditionalEvents = channel.unary_unary(
                '/ck.game.KingdomService/GetUnconfirmedRewardsInAdditionalEvents',
                request_serializer=game_dot_kingdom__pb2.GetUnconfirmedRewardsInAdditionalEventsRequest.SerializeToString,
                response_deserializer=game_dot_kingdom__pb2.GetUnconfirmedRewardsInAdditionalEventsResponse.FromString,
                _registered_method=True)


class KingdomServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SignUp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckKingdomNameExists(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeKingdomName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SellStackableItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExpandStorage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LevelUpTreasure(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompleteAchievements(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetBattleTeam(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetBattleTeams(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearRecordGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReceivePlatformConnectReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPendingAdditionalEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetKingdomProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetClientLogicVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReceiveAdvertisementReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartAdvertisement(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReceiveProsperityLevelReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProsperityRanking(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReceiveKingdomLevelReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReceiveCookieRelationshipRewards(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReceiveCookieSkinRelationshipRewards(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReceiveAllCookieRelationshipRewards(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReceiveAllCookieSkinRelationshipRewards(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUnconfirmedRewardsInAdditionalEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KingdomServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SignUp': grpc.unary_unary_rpc_method_handler(
                    servicer.SignUp,
                    request_deserializer=game_dot_kingdom__pb2.SignUpRequest.FromString,
                    response_serializer=game_dot_kingdom__pb2.SignUpResponse.SerializeToString,
            ),
            'CheckKingdomNameExists': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckKingdomNameExists,
                    request_deserializer=game_dot_kingdom__pb2.CheckKingdomNameExistsRequest.FromString,
                    response_serializer=game_dot_kingdom__pb2.CheckKingdomNameExistsResponse.SerializeToString,
            ),
            'ChangeKingdomName': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeKingdomName,
                    request_deserializer=game_dot_kingdom__pb2.ChangeKingdomNameRequest.FromString,
                    response_serializer=game_dot_kingdom__pb2.ChangeKingdomNameResponse.SerializeToString,
            ),
            'SellStackableItem': grpc.unary_unary_rpc_method_handler(
                    servicer.SellStackableItem,
                    request_deserializer=game_dot_kingdom__pb2.SellStackableItemRequest.FromString,
                    response_serializer=game_dot_kingdom__pb2.SellStackableItemResponse.SerializeToString,
            ),
            'ExpandStorage': grpc.unary_unary_rpc_method_handler(
                    servicer.ExpandStorage,
                    request_deserializer=game_dot_kingdom__pb2.ExpandStorageRequest.FromString,
                    response_serializer=game_dot_kingdom__pb2.ExpandStorageResponse.SerializeToString,
            ),
            'LevelUpTreasure': grpc.unary_unary_rpc_method_handler(
                    servicer.LevelUpTreasure,
                    request_deserializer=game_dot_kingdom__pb2.LevelUpTreasureRequest.FromString,
                    response_serializer=game_dot_kingdom__pb2.LevelUpTreasureResponse.SerializeToString,
            ),
            'CompleteAchievements': grpc.unary_unary_rpc_method_handler(
                    servicer.CompleteAchievements,
                    request_deserializer=game_dot_kingdom__pb2.CompleteAchievementsRequest.FromString,
                    response_serializer=game_dot_kingdom__pb2.CompleteAchievementsResponse.SerializeToString,
            ),
            'SetBattleTeam': grpc.unary_unary_rpc_method_handler(
                    servicer.SetBattleTeam,
                    request_deserializer=game_dot_kingdom__pb2.SetBattleTeamRequest.FromString,
                    response_serializer=game_dot_kingdom__pb2.SetBattleTeamResponse.SerializeToString,
            ),
            'SetBattleTeams': grpc.unary_unary_rpc_method_handler(
                    servicer.SetBattleTeams,
                    request_deserializer=game_dot_kingdom__pb2.SetBattleTeamsRequest.FromString,
                    response_serializer=game_dot_kingdom__pb2.SetBattleTeamsResponse.SerializeToString,
            ),
            'ClearRecordGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearRecordGroup,
                    request_deserializer=game_dot_kingdom__pb2.ClearRecordGroupRequest.FromString,
                    response_serializer=game_dot_kingdom__pb2.ClearRecordGroupResponse.SerializeToString,
            ),
            'ReceivePlatformConnectReward': grpc.unary_unary_rpc_method_handler(
                    servicer.ReceivePlatformConnectReward,
                    request_deserializer=game_dot_kingdom__pb2.ReceivePlatformConnectRewardRequest.FromString,
                    response_serializer=game_dot_kingdom__pb2.ReceivePlatformConnectRewardResponse.SerializeToString,
            ),
            'GetPendingAdditionalEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPendingAdditionalEvents,
                    request_deserializer=game_dot_kingdom__pb2.GetPendingAdditionalEventsRequest.FromString,
                    response_serializer=game_dot_kingdom__pb2.GetPendingAdditionalEventsResponse.SerializeToString,
            ),
            'GetKingdomProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetKingdomProfile,
                    request_deserializer=game_dot_kingdom__pb2.GetKingdomProfileRequest.FromString,
                    response_serializer=game_dot_kingdom__pb2.GetKingdomProfileResponse.SerializeToString,
            ),
            'SetClientLogicVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.SetClientLogicVersion,
                    request_deserializer=game_dot_kingdom__pb2.SetClientLogicVersionRequest.FromString,
                    response_serializer=game_dot_kingdom__pb2.SetClientLogicVersionResponse.SerializeToString,
            ),
            'ReceiveAdvertisementReward': grpc.unary_unary_rpc_method_handler(
                    servicer.ReceiveAdvertisementReward,
                    request_deserializer=game_dot_kingdom__pb2.ReceiveAdvertisementRewardRequest.FromString,
                    response_serializer=game_dot_kingdom__pb2.ReceiveAdvertisementRewardResponse.SerializeToString,
            ),
            'StartAdvertisement': grpc.unary_unary_rpc_method_handler(
                    servicer.StartAdvertisement,
                    request_deserializer=game_dot_kingdom__pb2.StartAdvertisementRequest.FromString,
                    response_serializer=game_dot_kingdom__pb2.StartAdvertisementResponse.SerializeToString,
            ),
            'ReceiveProsperityLevelReward': grpc.unary_unary_rpc_method_handler(
                    servicer.ReceiveProsperityLevelReward,
                    request_deserializer=game_dot_kingdom__pb2.ReceiveProsperityLevelRewardRequest.FromString,
                    response_serializer=game_dot_kingdom__pb2.ReceiveProsperityLevelRewardResponse.SerializeToString,
            ),
            'GetProsperityRanking': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProsperityRanking,
                    request_deserializer=game_dot_kingdom__pb2.GetProsperityRankingRequest.FromString,
                    response_serializer=game_dot_kingdom__pb2.GetProsperityRankingResponse.SerializeToString,
            ),
            'ReceiveKingdomLevelReward': grpc.unary_unary_rpc_method_handler(
                    servicer.ReceiveKingdomLevelReward,
                    request_deserializer=game_dot_kingdom__pb2.ReceiveKingdomLevelRewardRequest.FromString,
                    response_serializer=game_dot_kingdom__pb2.ReceiveKingdomLevelRewardResponse.SerializeToString,
            ),
            'ReceiveCookieRelationshipRewards': grpc.unary_unary_rpc_method_handler(
                    servicer.ReceiveCookieRelationshipRewards,
                    request_deserializer=game_dot_kingdom__pb2.ReceiveCookieRelationshipRewardsRequest.FromString,
                    response_serializer=game_dot_kingdom__pb2.ReceiveCookieRelationshipRewardsResponse.SerializeToString,
            ),
            'ReceiveCookieSkinRelationshipRewards': grpc.unary_unary_rpc_method_handler(
                    servicer.ReceiveCookieSkinRelationshipRewards,
                    request_deserializer=game_dot_kingdom__pb2.ReceiveCookieSkinRelationshipRewardsRequest.FromString,
                    response_serializer=game_dot_kingdom__pb2.ReceiveCookieSkinRelationshipRewardsResponse.SerializeToString,
            ),
            'ReceiveAllCookieRelationshipRewards': grpc.unary_unary_rpc_method_handler(
                    servicer.ReceiveAllCookieRelationshipRewards,
                    request_deserializer=game_dot_kingdom__pb2.ReceiveAllCookieRelationshipRewardsRequest.FromString,
                    response_serializer=game_dot_kingdom__pb2.ReceiveAllCookieRelationshipRewardsResponse.SerializeToString,
            ),
            'ReceiveAllCookieSkinRelationshipRewards': grpc.unary_unary_rpc_method_handler(
                    servicer.ReceiveAllCookieSkinRelationshipRewards,
                    request_deserializer=game_dot_kingdom__pb2.ReceiveAllCookieSkinRelationshipRewardsRequest.FromString,
                    response_serializer=game_dot_kingdom__pb2.ReceiveAllCookieSkinRelationshipRewardsResponse.SerializeToString,
            ),
            'GetUnconfirmedRewardsInAdditionalEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUnconfirmedRewardsInAdditionalEvents,
                    request_deserializer=game_dot_kingdom__pb2.GetUnconfirmedRewardsInAdditionalEventsRequest.FromString,
                    response_serializer=game_dot_kingdom__pb2.GetUnconfirmedRewardsInAdditionalEventsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ck.game.KingdomService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('ck.game.KingdomService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class KingdomService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SignUp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.KingdomService/SignUp',
            game_dot_kingdom__pb2.SignUpRequest.SerializeToString,
            game_dot_kingdom__pb2.SignUpResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CheckKingdomNameExists(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.KingdomService/CheckKingdomNameExists',
            game_dot_kingdom__pb2.CheckKingdomNameExistsRequest.SerializeToString,
            game_dot_kingdom__pb2.CheckKingdomNameExistsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ChangeKingdomName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.KingdomService/ChangeKingdomName',
            game_dot_kingdom__pb2.ChangeKingdomNameRequest.SerializeToString,
            game_dot_kingdom__pb2.ChangeKingdomNameResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SellStackableItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.KingdomService/SellStackableItem',
            game_dot_kingdom__pb2.SellStackableItemRequest.SerializeToString,
            game_dot_kingdom__pb2.SellStackableItemResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExpandStorage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.KingdomService/ExpandStorage',
            game_dot_kingdom__pb2.ExpandStorageRequest.SerializeToString,
            game_dot_kingdom__pb2.ExpandStorageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LevelUpTreasure(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.KingdomService/LevelUpTreasure',
            game_dot_kingdom__pb2.LevelUpTreasureRequest.SerializeToString,
            game_dot_kingdom__pb2.LevelUpTreasureResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CompleteAchievements(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.KingdomService/CompleteAchievements',
            game_dot_kingdom__pb2.CompleteAchievementsRequest.SerializeToString,
            game_dot_kingdom__pb2.CompleteAchievementsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetBattleTeam(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.KingdomService/SetBattleTeam',
            game_dot_kingdom__pb2.SetBattleTeamRequest.SerializeToString,
            game_dot_kingdom__pb2.SetBattleTeamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetBattleTeams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.KingdomService/SetBattleTeams',
            game_dot_kingdom__pb2.SetBattleTeamsRequest.SerializeToString,
            game_dot_kingdom__pb2.SetBattleTeamsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ClearRecordGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.KingdomService/ClearRecordGroup',
            game_dot_kingdom__pb2.ClearRecordGroupRequest.SerializeToString,
            game_dot_kingdom__pb2.ClearRecordGroupResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReceivePlatformConnectReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.KingdomService/ReceivePlatformConnectReward',
            game_dot_kingdom__pb2.ReceivePlatformConnectRewardRequest.SerializeToString,
            game_dot_kingdom__pb2.ReceivePlatformConnectRewardResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPendingAdditionalEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.KingdomService/GetPendingAdditionalEvents',
            game_dot_kingdom__pb2.GetPendingAdditionalEventsRequest.SerializeToString,
            game_dot_kingdom__pb2.GetPendingAdditionalEventsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetKingdomProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.KingdomService/GetKingdomProfile',
            game_dot_kingdom__pb2.GetKingdomProfileRequest.SerializeToString,
            game_dot_kingdom__pb2.GetKingdomProfileResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetClientLogicVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.KingdomService/SetClientLogicVersion',
            game_dot_kingdom__pb2.SetClientLogicVersionRequest.SerializeToString,
            game_dot_kingdom__pb2.SetClientLogicVersionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReceiveAdvertisementReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.KingdomService/ReceiveAdvertisementReward',
            game_dot_kingdom__pb2.ReceiveAdvertisementRewardRequest.SerializeToString,
            game_dot_kingdom__pb2.ReceiveAdvertisementRewardResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartAdvertisement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.KingdomService/StartAdvertisement',
            game_dot_kingdom__pb2.StartAdvertisementRequest.SerializeToString,
            game_dot_kingdom__pb2.StartAdvertisementResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReceiveProsperityLevelReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.KingdomService/ReceiveProsperityLevelReward',
            game_dot_kingdom__pb2.ReceiveProsperityLevelRewardRequest.SerializeToString,
            game_dot_kingdom__pb2.ReceiveProsperityLevelRewardResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProsperityRanking(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.KingdomService/GetProsperityRanking',
            game_dot_kingdom__pb2.GetProsperityRankingRequest.SerializeToString,
            game_dot_kingdom__pb2.GetProsperityRankingResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReceiveKingdomLevelReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.KingdomService/ReceiveKingdomLevelReward',
            game_dot_kingdom__pb2.ReceiveKingdomLevelRewardRequest.SerializeToString,
            game_dot_kingdom__pb2.ReceiveKingdomLevelRewardResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReceiveCookieRelationshipRewards(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.KingdomService/ReceiveCookieRelationshipRewards',
            game_dot_kingdom__pb2.ReceiveCookieRelationshipRewardsRequest.SerializeToString,
            game_dot_kingdom__pb2.ReceiveCookieRelationshipRewardsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReceiveCookieSkinRelationshipRewards(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.KingdomService/ReceiveCookieSkinRelationshipRewards',
            game_dot_kingdom__pb2.ReceiveCookieSkinRelationshipRewardsRequest.SerializeToString,
            game_dot_kingdom__pb2.ReceiveCookieSkinRelationshipRewardsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReceiveAllCookieRelationshipRewards(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.KingdomService/ReceiveAllCookieRelationshipRewards',
            game_dot_kingdom__pb2.ReceiveAllCookieRelationshipRewardsRequest.SerializeToString,
            game_dot_kingdom__pb2.ReceiveAllCookieRelationshipRewardsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReceiveAllCookieSkinRelationshipRewards(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.KingdomService/ReceiveAllCookieSkinRelationshipRewards',
            game_dot_kingdom__pb2.ReceiveAllCookieSkinRelationshipRewardsRequest.SerializeToString,
            game_dot_kingdom__pb2.ReceiveAllCookieSkinRelationshipRewardsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUnconfirmedRewardsInAdditionalEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ck.game.KingdomService/GetUnconfirmedRewardsInAdditionalEvents',
            game_dot_kingdom__pb2.GetUnconfirmedRewardsInAdditionalEventsRequest.SerializeToString,
            game_dot_kingdom__pb2.GetUnconfirmedRewardsInAdditionalEventsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
